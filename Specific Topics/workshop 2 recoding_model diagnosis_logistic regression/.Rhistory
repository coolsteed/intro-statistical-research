knitr::opts_chunk$set(echo = TRUE)
## This file is to explore k = 27, the solution we chosen.
## To explore the changes across sub-corpus and time
## setting the working environment
setwd("~/Documents/GitHub/CSR_computational-social-science_fdi")
## This file is to explore k = 27, the solution we chosen.
## To explore the changes across sub-corpus and time
## setting the working environment
getwd()
setwd("~/Documents/GitHub/CSR_computational-social-science_fdi")
## This file is to explore k = 28, the solution we chosen.
## To explore the changes across sub-corpus and time
##### Part 1 - Setting the working environment #####
getwd()
setwd("~/Documents/GitHub/CSR_computational-social-science_fdi")
setwd("~/")
## This file is to explore k = 28, the solution we chosen.
## To explore the changes across sub-corpus and time
##### Part 1 - Setting the working environment #####
getwd()
setwd("~/Documents/GitHub/CSR_computational-social-science_fdi")
## This file is to explore k = 28, the solution we chosen.
## To explore the changes across sub-corpus and time
##### Part 1 - Setting the working environment #####
getwd()
setwd("~/Documents/GitHub/CSR_computational-social-science_fdi")
install.packages("rpart")
setwd("~/Dropbox/working space/Statistic Consultant/SOCG206/workshop 2")
# setting the working environment
setwd("~/Dropbox/working space/Statistic Consultant/SOCG206/workshop 2")
library(tidyverse)
library(haven)
# for the purpose of continuity, we still using the garden data set.
data <- read_dta("./Gardening.dta")
library(gvlma) # Global Validation of Linear Models Assumptions.
# building the model
model <- lm(garden ~ as.factor(sex) + rincome + as.factor(race) + age, data = data)
summary(model)
# model diagnosis
# here we are using the gvlma package
# there are many other packages you can choose from
# install.packages("gvlma")
library(gvlma) # Global Validation of Linear Models Assumptions.
# building the model
model <- lm(garden ~ as.factor(sex) + rincome + as.factor(race) + age, data = data)
summary(model)
gv_model <- gvlma(model) # put the result of your model here
summary(gv_model)
# let's be wild
cov <- colnames(data)
cov <- cov[cov != "garden" & cov != "year"]
cov <- as.character(cov)
cov <- paste0(cov, collapse = '+')
model_to_test <- paste("garden",cov, sep = "~")
model_to_test <- formula(model_to_test)
model_full <- lm(formula = model_to_test, data = data)
summary(model_full)
gv_model_full <- gvlma(model_full)
summary(gv_model_full)
plot(gv_model_full)
summary(gv_model)
library(car)
vif(model_full) # usually, sqrt(vif)>2 implies that there is a multicollinearity problem
sqrt(vif(model_full)) > 2
View(data)
head(data)
colnames(data)
attributes(data)
attr(data$relig16, 'label')
unique(data$relig16)
data$relig_recoded <- NA
View(data)
model <- lm(garden ~ as.factor(sex) + rincome + as.factor(race) + age + relig_recoded, data = data)
summary(model)
# let's recode it
# create a new variable
data$relig_recoded <- NA
data$relig_recoded[data$relig16 %in% c(1, 2, 3, 9, 10, 11)] <- "Abraham Religion"
data$relig_recoded[data$relig16 %in% c(5,6,7,8,12,13,4)] <- "Other (including none)"
data$relig_recoded[data$relig16 %in% c(0, 98, 99)] <- NA
data$relig_recoded <- as.factor(data$relig_recoded)
# building the model
model <- lm(garden ~ as.factor(sex) + rincome + as.factor(race) + age + relig_recoded, data = data)
summary(model)
unique(data$sex)
data$rincome_adjusted <- log(data$rincome)
unique(data$rincome)
model_logit <- glm(garden ~ as.factor(sex) + rincome + as.factor(race) + age,
data = data,
family = "binomial")
summary(model_logit)
install.packages("margins")
library("margins")
m <- margins(model_logit)
summary(m)
model_full <- lm(garden ~ ., data = data)
summary(model_full)
gv_model_full <- gvlma(model_full)
summary(gv_model_full)
# setting the working environment
setwd("~/Dropbox/working space/Statistic Consultant/SOCG206/workshop 2")
library(tidyverse)
library(haven)
# for the purpose of continuity, we still using the garden data set.
data <- read_dta("./Gardening.dta")
library(gvlma) # Global Validation of Linear Models Assumptions.
# building the model
model <- lm(garden ~ as.factor(sex) + rincome + as.factor(race) + age, data = data)
summary(model)
# setting the working environment
setwd("~/Dropbox/working space/Statistic Consultant/SOCG206/workshop 2")
library(tidyverse)
library(haven)
# for the purpose of continuity, we still using the garden data set.
data <- read_dta("./Gardening.dta")
# model diagnosis
# here we are using the gvlma package
# there are many other packages you can choose from
# install.packages("gvlma")
# library(gvlma) # Global Validation of Linear Models Assumptions.
# building the model
model <- lm(garden ~ as.factor(sex) + rincome + as.factor(race) + age, data = data)
summary(model)
# test the presumptions
gv_model <- gvlma(model) # put the result of your model here
summary(gv_model)
# setting the working environment
setwd("~/Dropbox/working space/Statistic Consultant/SOCG206/workshop 2")
library(tidyverse)
library(haven)
# for the purpose of continuity, we still using the garden data set.
data <- read_dta("./Gardening.dta")
# model diagnosis
# here we are using the gvlma package
# there are many other packages you can choose from
# install.packages("gvlma")
# library(gvlma) # Global Validation of Linear Models Assumptions.
# building the model
model <- lm(garden ~ as.factor(sex) + rincome + as.factor(race) + age, data = data)
summary(model)
# test the presumptions
gv_model <- gvlma(model) # put the result of your model here
summary(gv_model)
# setting the working environment
setwd("~/Dropbox/working space/Statistic Consultant/SOCG206/workshop 2")
library(tidyverse)
library(haven)
# for the purpose of continuity, we still using the garden data set.
data <- read_dta("./Gardening.dta")
# model diagnosis
# here we are using the gvlma package
# there are many other packages you can choose from
# install.packages("gvlma")
library(gvlma) # Global Validation of Linear Models Assumptions.
# building the model
model <- lm(garden ~ as.factor(sex) + rincome + as.factor(race) + age, data = data)
summary(model)
# test the presumptions
gv_model <- gvlma(model) # put the result of your model here
summary(gv_model)
View(data)
model <- lm(garden ~ as.factor(sex) + rincome + as.factor(race) + age + polviews, data = data)
summary(model)
gv_model <- gvlma(model) # put the result of your model here
summary(gv_model)
cov <- colnames(data)
cov <- cov[cov != "garden" & cov != "year"]
cov <- as.character(cov)
cov <- paste0(cov, collapse = '+')
model_to_test <- paste("garden",cov, sep = "~")
model_to_test <- formula(model_to_test)
model_full <- lm(formula = model_to_test, data = data)
gv_model_full <- gvlma(model_full)
summary(gv_model_full)
plot(gv_model_full)
library(car)
vif(model_full) # usually, sqrt(vif)>2 implies that there is a multicollinearity problem
sqrt(vif(model_full)) > 2
head(data)
head(data,100)
colnames(data)
attributes(data)
attr(data$relig16, 'label')
unique(data$relig16)
data$relig_recoded <- NA
data$relig_recoded[data$relig16 %in% c(1, 2, 3, 9, 10, 11)] <- "Abraham Religion"
data$relig_recoded[data$relig16 %in% c(5, 6, 7, 8, 12, 13, 4)] <- "Other (including none)"
data$relig_recoded[data$relig16 %in% c(0, 98, 99)] <- NA
data$relig_recoded <- as.factor(data$relig_recoded)
unique(data$relig_recoded)
# you can also use "recode" function in dplyr package (not ideal for many reasons)
# see https://dplyr.tidyverse.org/reference/recode.html for more information
# oh there is also one in the car, so you can specify it.
data$relig_recoded2 <- dplyr::recode(data$relig16,
default = NA,
`1` = "Abraham Religion",
`2` = "Abraham Religion",
`3` = "Abraham Religion",
`9` = "Abraham Religion",
`10` = "Abraham Religion",
`11` = "Abraham Religion",
`5`  = "Other (including none)",
`6`  = "Other (including none)",
`7`  = "Other (including none)",
`8`  = "Other (including none)",
`12`  = "Other (including none)",
`13`  = "Other (including none)",
`4`  = "Other (including none)",)
data$relig_recoded3 <- car::recode(as.numeric(data$relig16), "c(0, 98, 99) = NA; c(1, 2, 3, 9, 10, 11) = 'Abraham Religion';c(5, 6, 7, 8, 12, 13, 4)  = 'Other'",
as.factor = TRUE)
model_logit <- glm(garden ~ as.factor(sex) + rincome + as.factor(race) + age,
data = data,
family = "binomial")
summary(model_logit)
install.packages("margins")
library("margins")
m <- margins(model_logit)
summary(m)
summary(data)
summary(data$garden)
