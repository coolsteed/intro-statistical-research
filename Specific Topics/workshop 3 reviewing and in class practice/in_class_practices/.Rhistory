knitr::opts_chunk$set(echo = TRUE)
## This file is to explore k = 27, the solution we chosen.
## To explore the changes across sub-corpus and time
## setting the working environment
setwd("~/Documents/GitHub/CSR_computational-social-science_fdi")
## This file is to explore k = 27, the solution we chosen.
## To explore the changes across sub-corpus and time
## setting the working environment
getwd()
setwd("~/Documents/GitHub/CSR_computational-social-science_fdi")
## This file is to explore k = 28, the solution we chosen.
## To explore the changes across sub-corpus and time
##### Part 1 - Setting the working environment #####
getwd()
setwd("~/Documents/GitHub/CSR_computational-social-science_fdi")
setwd("~/")
## This file is to explore k = 28, the solution we chosen.
## To explore the changes across sub-corpus and time
##### Part 1 - Setting the working environment #####
getwd()
setwd("~/Documents/GitHub/CSR_computational-social-science_fdi")
## This file is to explore k = 28, the solution we chosen.
## To explore the changes across sub-corpus and time
##### Part 1 - Setting the working environment #####
getwd()
setwd("~/Documents/GitHub/CSR_computational-social-science_fdi")
install.packages("rpart")
install.packages("mi")
data_x <- data.frame(key = c(1, 2, 3), value_x = c("x1","x2","x3"))
data_y <- data.frame(key = c(1, 2, 4), value_x = c("y1","y2","y4"))
data_merged <- merge(data_x, data_y, by = c("key"))
View(data_merged)
data_x <- data.frame(key = c(1, 2, 3), value_x = c("x1","x2","x3"))
data_y <- data.frame(key = c(1, 2, 4), value_y = c("y1","y2","y4"))
data_merged <- merge(data_x, data_y, by = c("key"))
data_x <- data.frame(key = c(1, 2, 1, 2), value_x = c("x1", "x2", "x3", "x4"))
data_y <- data.frame(key = c(1, 2), value_y = c("y1","y2"))
data_merged <- merge(data_x, data_y, by = c("key"), all.x = TRUE)
View(data_merged)
data_x <- data.frame(key = c(1, 2), value_x = c("x1", "x2"))
data_y <- data.frame(key = c(1, 2, 1, 2), value_y = c("y1", "y2", "y3", "y4"))
data_merged <- merge(data_x, data_y, by = c("key"), all.x = TRUE)
View(data_merged)
# m:1
data_x <- data.frame(key = c(1, 2, 1, 2, 3), value_x = c("x1", "x2", "x3", "x4", "x5"))
data_y <- data.frame(key = c(1, 2, 4), value_y = c("y1", "y2", "y3"))
data_merged <- merge(data_x, data_y, by = c("key"), all = TRUE)
View(data_merged)
data_x <- data.frame(key = c(1, 2, 4), value_x = c("x1", "x2", "x3"))
data_y <- data.frame(key = c(1, 2, 1, 2, 3), value_y = c("y1", "y2", "y3", "y4", "y5"))
data_merged <- merge(data_x, data_y, by = c("key"), all = TRUE)
View(data_merged)
## Merging data set
data_x <- data.frame(key = c(1, 2, 3), value_x = c("x1", "x2", "x3"))
data_y <- data.frame(key = c(1, 2, 4), value_y = c("y1", "y2", "y4"))
View(data_x)
View(data_y)
data_merged <- merge(data_x, data_y, by = c("key"), all = FALSE)
View(data_merged)
data_merged <- merge(data_x, data_y, by = c("key"), all.x = TRUE)
data_merged <- merge(data_x, data_y, by = c("key"), all.y = TRUE)
data_merged <- merge(data_x, data_y, by = c("key"), all = TRUE)
data_x <- data.frame(key = c(1, 2, 1, 2, 3), value_x = c("x1", "x2", "x3", "x4", "x5"))
data_y <- data.frame(key = c(1, 2, 4), value_y = c("y1", "y2", "y3"))
View(data_x)
data_merged <- merge(data_x, data_y, by = c("key"), all = TRUE)
View(data_merged)
data_merged <- merge(data_x, data_y, by = c("key"), all.x = TRUE)
data_x <- data.frame(key = c(1, 2, 4), value_x = c("x1", "x2", "x3"))
data_y <- data.frame(key = c(1, 2, 1, 2, 3), value_y = c("y1", "y2", "y3", "y4", "y5"))
View(data_x)
data_y <- data.frame(key = c(1, 2, 1, 2, 3), value_y = c("y1", "y2", "y3", "y4", "y5"))
data_merged <- merge(data_x, data_y, by = c("key"), all.x = TRUE)
# m:1
data_x <- data.frame(key = c(1, 2, 1, 2, 3), value_x = c("x1", "x2", "x3", "x4", "x5"))
data_y <- data.frame(key = c(1, 2, 4), value_y = c("y1", "y2", "y3"))
data_merged <- merge(data_x, data_y, by = c("key"), all.x = TRUE)
data_merged <- merge(data_y, data_x, by = c("key"), all.x = TRUE)
data_x <- data.frame(key = c(1, 2, 1, 2, 3), value_x = c("x1", "x2", "x3", "x4", "x5"))
data_y <- data.frame(key = c(1, 2, 4), value_y = c("y1", "y2", "y3"))
data_merged <- merge(data_x, data_y, by = c("key"), all.x = TRUE)
data_merged <- merge(data_y, data_x, by = c("key"), all.x = TRUE)
# This script is for sem related techniques and merging.
# the main reference is
# https://stats.idre.ucla.edu/r/seminars/rsem/
# optional: for mca
# http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/114-mca-multiple-correspondence-analysis-in-r-essentials/
## setting the working environment
setwd("~/Dropbox/working space/Statistic Consultant/SOCG206/in_class_practices")
library(tidyverse) # for data transformation
library(haven) # to read the stata data.
library(lavaan)
## reading the data
data <- read_dta("./gss_stata_with_codebook/GSS7218_R3.DTA")
data_to_model <- data %>%
select(wealth, age, educ, paeduc, maeduc)
data_to_model <- select(data, wealth, age, educ, paeduc, maeduc)
View(data_to_model)
cor(data_to_model, use = "complete.obs")
model_path <- '
# regression
educ ~ 1 + paeduc + maeduc
wealth ~ 1 + age + educ + paeduc + maeduc
# covariance
paeduc ~~ maeduc
'
model_fit <- sem(model_path, data = data_to_model)
library(lavaan) # the package for sem
## select the data
data_to_model <- data %>%
select(wealth, age, educ, paeduc, maeduc)
data_to_model <- select(data, wealth, age, educ, paeduc, maeduc)
## describe the cor
cor(data_to_model, use = "complete.obs")
## building a path analysis model
model_path <- '
# regression
educ ~ 1 + paeduc + maeduc
wealth ~ 1 + age + educ + paeduc + maeduc
# covariance
paeduc ~~ maeduc
'
# note here we added covariance into the model.
# We use the whole gss data, while in case we use a certain year
## fitting
model_fit <- sem(model_path, data = data_to_model)
summary(model_fit, fit.measures=TRUE)
pchisq(q=4.870,df=1,lower.tail=FALSE)
data_to_model <- data %>%
select(wealth, age, educ, paeduc, maeduc, rincome)
model_path <- '
# regression
# educ ~ 1 + paeduc + maeduc
wealth ~ 1 + age + educ + paeduc + maeduc
# rincome ~ 1 + age + educ + paeduc + maeduc
# covariance
paeduc ~~ maeduc
'
# note here we added covariance into the model.
# We use the whole gss data, while in case we use a certain year
## fitting
model_fit <- sem(model_path, data = data_to_model)
summary(model_fit, fit.measures=TRUE)
pchisq(q=4.870,df=1,lower.tail=FALSE)
